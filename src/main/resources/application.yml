server:
  port: ${PORT:8080}
  shutdown: graceful
  compression:
    enabled: true
    min-response-size: 1024
  tomcat:
    connection-timeout: 240s
    keep-alive-timeout: 240s
    max-connections: 8192
    max-http-form-post-size: 50MB

spring:
  application:
    name: translation-call-app
  
  # Database configuration (H2 for development/Railway PostgreSQL for production)
  datasource:
    url: ${DATABASE_URL:jdbc:h2:mem:testdb}
    driver-class-name: ${DATABASE_DRIVER:org.h2.Driver}
    username: ${DATABASE_USER:sa}
    password: ${DATABASE_PASSWORD:password}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: ${DATABASE_DIALECT:org.hibernate.dialect.H2Dialect}
        format_sql: true
        use_sql_comments: false
    open-in-view: false
  
  # H2 Console (disable in production)
  h2:
    console:
      enabled: ${H2_CONSOLE_ENABLED:false}
      path: /h2-console
  
  # Jackson configuration
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  
  # File upload configuration
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  
  # WebSocket configuration
  websocket:
    allowed-origins: "*"
    max-text-message-buffer-size: 8192
    max-binary-message-buffer-size: 8192
    max-session-idle-timeout: 240000

# Twilio Configuration
twilio:
  account:
    sid: ${TWILIO_ACCOUNT_SID}
  auth:
    token: ${TWILIO_AUTH_TOKEN}
  twiml:
    app:
      sid: ${TWILIO_TWIML_APP_SID}
  webhook:
    timeout: 30s
    retry:
      attempts: 3
      delay: 2s

# OpenAI Configuration - Standard API (not Realtime)
openai:
  api:
    key: ${OPENAI_API_KEY}
  # Whisper configuration for speech-to-text
  whisper:
    model: whisper-1
    timeout: 30s
    language: auto  # Auto-detect or specify like "en", "es"
  # GPT configuration for translation
  chat:
    model: gpt-4
    timeout: 30s
    max-tokens: 150
    temperature: 0.3
  # Text-to-Speech configuration
  tts:
    model: tts-1
    voice: alloy  # Options: alloy, echo, fable, onyx, nova, shimmer
    timeout: 30s
    response-format: mp3

# Audio Processing Configuration
audio:
  storage:
    directory: ${AUDIO_STORAGE_DIR:./audio-files}
    cleanup:
      enabled: true
      interval: 300s  # 5 minutes
      max-age: 14400s  # 4 hours
      batch-size: 100
  format:
    conversion:
      timeout: 30s
      buffer-size: 8192
      sample-rate: 8000  # Twilio uses 8kHz
      bit-depth: 16
  processing:
    thread-pool-size: 8
    queue-capacity: 1000
  # Audio file serving configuration
  download:
    mode: inline  # "inline" for browser playback, "attachment" for downloads
  security:
    max-filename-length: 255
    allowed-extensions:
      - wav
      - mp3
      - ogg
      - m4a

# Media Stream Configuration
media:
  stream:
    max:
      queue:
        size: 10
    processing:
      timeout: 30s
      chunk-size: 320  # Size of audio chunks in bytes

# Translation Configuration
translation:
  default:
    source:
      language: en-US
    target:
      language: es-ES
  session:
    timeout: 14400s  # 4 hours
    cleanup:
      interval: 300s  # 5 minutes
  # Language mapping for OpenAI APIs
  language-codes:
    en-US: en
    es-ES: es
    fr-FR: fr
    de-DE: de
    it-IT: it
    pt-PT: pt
    zh-CN: zh
    ja-JP: ja
    ko-KR: ko

# Bot Participant Configuration
bot:
  participant:
    lookup:
      retries: 3
      initial-delay: 2s
      max-delay: 8s
    thread:
      pool:
        size: 4
    twiml:
      timeout: 30s

# Conference Management
conference:
  default:
    timeout: 14400s  # 4 hours
    max-participants: 10
    beep: false
    record: false
  cleanup:
    enabled: true
    interval: 300s  # 5 minutes
    batch-size: 50

# Application URLs
app:
  base-url: ${APP_BASE_URL:https://talktranslate-backend-production.up.railway.app}
  frontend-url: ${FRONTEND_URL:https://talktranslate.netlify.app}
  audio-base-url: ${AUDIO_BASE_URL:${app.base-url}/api/audio}

# CORS Configuration
cors:
  allowed-origins:
    - ${app.frontend-url}
    - "http://localhost:3000"
    - "http://localhost:5173"
    - "https://*.netlify.app"
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers:
    - "*"
  allow-credentials: true
  max-age: 3600

# Security Configuration
security:
  twilio:
    signature:
      validation:
        enabled: ${TWILIO_SIGNATURE_VALIDATION:true}
        timeout: 30s
  rate-limiting:
    enabled: true
    requests-per-minute: 1000
    burst-capacity: 100
  audio:
    filename:
      validation:
        enabled: true
        pattern: "^[a-zA-Z0-9._-]+$"
    path-traversal:
      protection: true

# Monitoring and Health
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  health:
    defaults:
      enabled: true
    diskspace:
      enabled: true
      threshold: 100MB
    db:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99

# Logging Configuration
logging:
  level:
    com.example.translationcallapp: ${LOG_LEVEL:INFO}
    com.twilio: WARN
    org.springframework.web: WARN
    org.hibernate: WARN
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    javax.websocket: INFO
    org.springframework.security: WARN
    org.springframework.web.client.RestTemplate: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:./logs/translation-app.log}
    max-size: 100MB
    max-history: 30

# Thread Pool Configuration
task:
  execution:
    pool:
      core-size: 8
      max-size: 32
      queue-capacity: 1000
      keep-alive: 60s
      thread-name-prefix: "async-"
      allow-core-thread-timeout: true
  scheduling:
    pool:
      size: 4
      thread-name-prefix: "scheduled-"

# Graceful Shutdown
spring.lifecycle.timeout-per-shutdown-phase: 30s

# Cache Configuration
spring:
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=300s
    cache-names:
      - audioConversions
      - translationSessions
      - participantMappings
      - whisperTranscriptions

# Development/Testing Profiles
---
spring:
  config:
    activate:
      on-profile: development

logging:
  level:
    com.example.translationcallapp: DEBUG
    org.hibernate.SQL: DEBUG
    javax.websocket: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG

spring:
  h2:
    console:
      enabled: true

security:
  twilio:
    signature:
      validation:
        enabled: false

# Audio storage for development
audio:
  storage:
    directory: ./dev-audio-files
  download:
    mode: inline

# OpenAI development settings
openai:
  chat:
    model: gpt-3.5-turbo  # Cheaper for development
    max-tokens: 100
  tts:
    voice: alloy

# CORS more permissive for development
cors:
  allowed-origins:
    - "http://localhost:3000"
    - "http://localhost:5173"
    - "http://localhost:8080"
    - "https://*.netlify.app"

---
spring:
  config:
    activate:
      on-profile: test

spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password

logging:
  level:
    com.example.translationcallapp: DEBUG
    org.hibernate.SQL: DEBUG

security:
  twilio:
    signature:
      validation:
        enabled: false
  audio:
    filename:
      validation:
        enabled: false

audio:
  storage:
    directory: ./test-audio-files
    cleanup:
      enabled: false
  download:
    mode: inline

# Test with cheaper models
openai:
  chat:
    model: gpt-3.5-turbo
    max-tokens: 50
  tts:
    voice: alloy

---
spring:
  config:
    activate:
      on-profile: production

logging:
  level:
    com.example.translationcallapp: INFO
    org.hibernate.SQL: WARN

spring:
  h2:
    console:
      enabled: false

security:
  twilio:
    signature:
      validation:
        enabled: true
  audio:
    filename:
      validation:
        enabled: true

# Production audio settings
audio:
  download:
    mode: inline
  security:
    max-filename-length: 255

# Production OpenAI settings
openai:
  chat:
    model: gpt-4  # Use best model for production
    max-tokens: 150
  tts:
    voice: alloy

# Production CORS - restricted origins
cors:
  allowed-origins:
    - ${app.frontend-url}
    - "https://*.netlify.app"

management:
  endpoint:
    health:
      show-details: never